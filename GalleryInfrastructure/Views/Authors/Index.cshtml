@model IEnumerable<GalleryDomain.Model.Author>

@{
    ViewData["Title"] = "Фотографи";
    // Припустимо, що ви отримали статистику авторів у ViewBag
    // У вашому контроллері ви повинні створити ViewBag.AuthorStatistics
    // де AuthorStatistics — це список анонімних об'єктів з полями AuthorName та PhotoCount
}

<div class="margin_top_50"></div>

<div class="d-flex align-items-center flex-column">
    <h1>Фотографи</h1>
    <p>
        <a asp-action="Create" class="btn btn-light">Додати фотографа</a>
    </p>
</div>

<div class="list-group list-group-author">
    @foreach (var item in Model)
    {
        <div class="list-group-item list-group-item-author author_card_wrapper">
            <div class="d-flex author_card_title">
                <div><h3>@Html.DisplayFor(modelItem => item.Name)</h3></div>
                <div>@Html.DisplayFor(modelItem => item.Country.Name)</div>
            </div>
            <div><strong>@Html.DisplayNameFor(model => model.Biography):<br /></strong> @Html.DisplayFor(modelItem => item.Biography)</div>
            <div>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Редагувати інформацію</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Інформація @* та роботи *@</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Видалити</a>
            </div>
        </div>
    }
</div>

<!-- Контейнер для Doughnut діаграми -->
<div class="mt-5">
    <canvas id="authorChart" width="300" height="300"></canvas>
</div>

<!-- Підключення Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('authorChart').getContext('2d');

    // Функція для генерації випадкового кольору
    function getRandomColor() {
        const letters = '0123456789ABCDEF';
        let color = 'rgba(';
        for (let i = 0; i < 3; i++) {
            color += Math.floor(Math.random() * 256);
            if (i < 2) color += ',';
        }
        color += ', 0.6)'; // Прозорість
        return color;
    }

    var labels = @Html.Raw(Json.Serialize(((IEnumerable<dynamic>)ViewBag.AuthorStatistics).Select(a => a.AuthorName)));
    var dataValues = @Html.Raw(Json.Serialize(((IEnumerable<dynamic>)ViewBag.AuthorStatistics).Select(a => a.PhotoCount)));

    var authorData = {
        labels: labels,
        datasets: [{
            label: 'Кількість фото',
            data: dataValues,
            backgroundColor: labels.map(() => getRandomColor()), // Генерація кольорів
            borderColor: 'rgba(255, 255, 255, 1)',
            borderWidth: 1
        }]
    };

    var authorChart = new Chart(ctx, {
        type: 'doughnut',
        data: authorData,
        options: {
            responsive: true,
            maintainAspectRatio: false, // Дозволяє змінювати пропорції
            plugins: {
                legend: {
                    display: true,
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            var label = tooltipItem.label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += tooltipItem.raw; // Кількість фото
                            return label;
                        }
                    }
                }
            }
        }
    });
</script>

